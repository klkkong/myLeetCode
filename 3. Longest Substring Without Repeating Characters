# Given a string, find the length of the longest substring without repeating characters.
# Note that the answer must be a substring, not a subsequence.
# medium, hash map, two pointers

# 1. my solution
class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        int len=s.length();
        if(len<2) return len;
        int i=0,maxlen=0;
        while(i<len)
        {
            unordered_map<char,int> hm;
            int j=i;
            while(j<len)
            {
                if(hm.count(s[j])==0)
                {
                    hm[s[j]]=1;
                    j++;
                }
                else
                {
                    
                    break;
                }
            }
            int hmsize=hm.size();
            maxlen=max(maxlen,hmsize);
            while(j<len-1 && s[j]==s[j+1])
            {
                j++;
                i=j;
            }
            if(i!=j)
                i++;
        }
        return maxlen;
    }
};

result: 
